{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glucero\\\\Desktop\\\\Movimiento\\\\client\\\\src\\\\Componentes\\\\Principal.jsx\",\n    _s = $RefreshSig$();\n\n// 14)\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCryptos, resetTodo, ordenDesc, filtradoXGenero } from \"../actions/index\";\nimport Videojuegos from \"../Componentes/Videojuegos\";\nimport { Paginacion } from \"../Componentes/Paginado\";\nimport Filtro from \"../Componentes/Filtro.jsx\";\nimport \"../EstilosCss/Principal.css\";\nimport NavBar from \"./Navbar\";\nimport imagen from \"./images/bold-preloader.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const videojuegosFiltrados = useSelector(state => state.videojuegosFiltrados);\n  const filtrado = useSelector(state => state.filtrado);\n  const orden = useSelector(state => state.orden);\n  const cryptos = useSelector(state => state.cryptosok);\n  const cryptosss = useSelector(state => state.cryptos); //apenas inicie me traigo todos los juegos y reseteo los filtros/ordenamientos y los videojuegos \n\n  useEffect(() => {\n    dispatch(resetTodo());\n    dispatch(getCryptos());\n  }, []);\n  useEffect(() => {\n    console.log('inicio ac치'); // dispatch(filtradoXGenero(\"btc\"));\n\n    dispatch(filtradoXGenero(\"busd\"));\n    dispatch(ordenDesc(\"desc_rating\"));\n  }, [cryptosss]); // Filtrado y Ordenado\n  // orden === \"Select\"\n\n  let todosJuegos = videojuegosFiltrados; // muestro todos los videojuegos si no hay filtro/ordenamientos\n  // si hay, muestro los videojuegos filtrados\n  // Paginacion\n\n  function paginado(e, num) {\n    e.preventDefault();\n    setPagina(num);\n  }\n\n  const [pagina, setPagina] = useState(1); // seteo el estado pagina, que empieza en 1\n\n  const [videojuegosXPag] = useState(30); // ac치 pongo el max de juegos que voy a mostrar\n\n  let ultimaCardPag = pagina * videojuegosXPag; // la ultima card \n\n  let primerCardPag = ultimaCardPag - videojuegosXPag; // la primera card\n\n  let juegosPagActual = todosJuegos.slice(primerCardPag, ultimaCardPag); // ac치 muestro solo 15 videojuegos segun el numero del paginado\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: (juegosPagActual === null || juegosPagActual === void 0 ? void 0 : juegosPagActual.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gg2\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtro\",\n        children: /*#__PURE__*/_jsxDEV(Filtro, {\n          paginado: paginado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Paginacion, {\n        videojuegosXPag: videojuegosXPag,\n        totalVideojuegos: todosJuegos.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(Videojuegos, {\n          cryptos: juegosPagActual\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Paginacion, {\n        videojuegosXPag: videojuegosXPag,\n        totalVideojuegos: todosJuegos.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading\",\n        src: imagen,\n        alt: \"Link caido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"pa/5U0owxx//TaweS4jr8C87j+w=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/glucero/Desktop/Movimiento/client/src/Componentes/Principal.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getCryptos","resetTodo","ordenDesc","filtradoXGenero","Videojuegos","Paginacion","Filtro","NavBar","imagen","Home","dispatch","videojuegosFiltrados","state","filtrado","orden","cryptos","cryptosok","cryptosss","console","log","todosJuegos","paginado","e","num","preventDefault","setPagina","pagina","videojuegosXPag","ultimaCardPag","primerCardPag","juegosPagActual","slice","length"],"mappings":"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","sourcesContent":["// 14)\n\nimport React, { useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCryptos, resetTodo, ordenDesc, filtradoXGenero } from \"../actions/index\";\nimport Videojuegos from \"../Componentes/Videojuegos\";\nimport { Paginacion } from \"../Componentes/Paginado\";\nimport Filtro from \"../Componentes/Filtro.jsx\";\nimport \"../EstilosCss/Principal.css\";\nimport NavBar from \"./Navbar\";\nimport imagen from \"./images/bold-preloader.gif\"\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  const videojuegosFiltrados = useSelector((state) => state.videojuegosFiltrados);\n  const filtrado = useSelector((state) => state.filtrado);\n  const orden = useSelector((state) => state.orden);\n  const cryptos = useSelector((state) => state.cryptosok);\n  const cryptosss = useSelector((state) => state.cryptos);\n\n  //apenas inicie me traigo todos los juegos y reseteo los filtros/ordenamientos y los videojuegos \n  useEffect(() => {\n    dispatch(resetTodo());\n    dispatch(getCryptos());\n  \n    \n   \n  }, []); \n  \n  useEffect(() => {\n\n    console.log('inicio ac치')\n    // dispatch(filtradoXGenero(\"btc\"));\n    dispatch(filtradoXGenero(\"busd\"));\n    dispatch(ordenDesc(\"desc_rating\"));\n\n    \n   \n  }, [cryptosss]); \n\n\n\n  \n\n  // Filtrado y Ordenado\n\n  \n  // orden === \"Select\"\n     let todosJuegos = videojuegosFiltrados // muestro todos los videojuegos si no hay filtro/ordenamientos\n // si hay, muestro los videojuegos filtrados\n\n  // Paginacion\n  function paginado(e, num) {\n    e.preventDefault();\n    setPagina(num);\n  }\n\n  const [pagina, setPagina] = useState(1); // seteo el estado pagina, que empieza en 1\n  const [videojuegosXPag] = useState(30); // ac치 pongo el max de juegos que voy a mostrar\n\n  let ultimaCardPag = pagina * videojuegosXPag; // la ultima card \n  let primerCardPag = ultimaCardPag - videojuegosXPag; // la primera card\n  let juegosPagActual = todosJuegos.slice(primerCardPag, ultimaCardPag); // ac치 muestro solo 15 videojuegos segun el numero del paginado\n\n\n  return (\n    <div className=\"home\">\n        {juegosPagActual?.length > 0 ?\n\n\n<div>\n\n      <div className=\"gg2\"><NavBar/></div>\n      <div className=\"filtro\">\n      <Filtro paginado={paginado} /> \n      </div>\n      <Paginacion\n      videojuegosXPag={videojuegosXPag}\n      totalVideojuegos={todosJuegos.length}\n      paginado={paginado}\n    />\n    \n    <div>  <Videojuegos cryptos={juegosPagActual} /></div>\n    <Paginacion\n      videojuegosXPag={videojuegosXPag}\n      totalVideojuegos={todosJuegos.length}\n      paginado={paginado}\n    />\n    </div>\n    :\n    <div>\n      <img className=\"loading\" src={imagen} alt=\"Link caido\"/>\n  </div>\n        }\n  </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}